'use strict';
import gulp from 'gulp'
import GulpPlugins from 'gulp-load-plugins'
import {argv} from 'yargs'
import Help from './src/Help'

const plugins = GulpPlugins();

const options = {
	destination: argv.destination || './build',
	command: argv._[0],
	coverage: argv.coverage || false
};

const data = {
	cleanPatterns: [options.destination],
	sources: ['./src/**/**.js']
};

const help = new Help(
	'Gulp Task: Help'
);

help.registerArgument(
	'bail', 'Stop tests after first failure', 'false'
);

help.registerArgument(
	'coverage', 'Generate a coverage report from the run tests.', 'false'
);

help.registerArgument(
	'clean', 'Force a clean before running tasks.', 'false'
);

help.registerArgument(
	'destination', 'The build files destination directory.', 'build'
);

help.registerTask(
	'clean',
	'Removed all files and folders generated by the build'
);
help.registerTask(
	'help',
	'Shows information on the usage of gulp.'
);
help.registerTask(
	'test',
	'Run the test suite',
	[],
	['coverage', 'bail']
);
help.registerTask(
	'build',
	'Builds the project',
	['clean'],
	['destination', 'clean']
);

gulp.task('clean', loadTask('clean'));
gulp.task('test', loadTask('test'));
gulp.task('build', ['clean'], loadTask('build'));
gulp.task('help', help.helpTask);
gulp.task('default', ['help']);

function loadTask(taskName) {
	return require('./gulp/' + taskName)(gulp, plugins, options, data);
}
